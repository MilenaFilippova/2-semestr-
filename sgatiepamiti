//восемь-семь-восемь
#include <stdio.h>
#include <iostream>
#include <fstream>

void press(char *input, char *output);   //функция сжатия
void unpress(char *input, char *output);   //функция восстановления размера
using namespace std;

void main(int argc,char *argv[])
{
	  setlocale(LC_ALL,"Russian");
	  int otvet;
	  if(argc!=4)
	  {
		  cout<<"Известны не все данные"<<endl;
		  exit(1);
	  }
	  if (argc=4)
	  {
		  cout<<"Известны все данные"<<endl;
	  }
	  if(toupper(*argv[3])=='C')
	  {
		  press(argv[1],argv[2]);		
		  cout<<"Сжатый файл готов "<<endl;
	  }		
	  else
    	  {
		  unpress(argv[1],argv[2]);
		  cout<<"Размер востановлен "<<endl;
    	  }
	  system("pause");
	  exit(1);
}

void press(char *input, char *output)
{
	  char ch,ch2,t;
	  int done=0;
	  ifstream in(input, ios::in | ios::binary);
	  ofstream out(output, ios::out | ios::binary);

	  if(!in)
		  cout <<"входной файл не может быть открыт";
	  if(!out)
		  cout <<"выходной файл не может быть открыт";
	  do
	  {
		  ch=in.get();
		  ch=ch<<1;
		  cout <<"ch= "<<ch<<endl;
		  for( t=0;t<7;t++)
		  {
			  ch2=in.get();
			  if(in.eof())
			  {
				  ch2=0;
				  done=1;
			  }
			  ch2=ch2&127;
			  ch2=ch2|((ch<<t)&128);
			  out.put((char)ch2);
		  }
	  }
	  while (!done && in.eof());

	  in.close();
	  out.close();
}


void unpress(char *input, char *output)
{
	  char ch=0,ch2,t;
	  int done=0;
	  ifstream in(input, ios::in | ios::binary);
	  ofstream out(output, ios::out | ios::binary);
	
	  if(!in)
		  cout <<"входной файл не может быть открыт";
	  if(!out)
		  cout <<"выходной файл не может быть открыт";
	  do
	  {
		  for(t=0;t<7;t++)
		  {
			  ch2=in.get();
			  if(in.eof())
			  {
				  ch2=0;
				  done=1;
			  }
			  ch=ch|((ch2&128)>>t);
			
		  }
		  ch=(ch>>1)&127;
		  out.put((char)ch);
		  in.close();
		  ifstream in(input, ios::in | ios::binary);

		  for( t=0;t<7;t++)
		  {
			  ch2=in.get();
			  if(in.eof())
			  {
				  ch2=0;
				  done=1;
			  }
			  ch2=ch2&127;
			  out.put((char)ch2);
		  }
	}
	while (!done && in.eof());

	in.close();
	out.close();
}
